<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--<mapper namespace="com.codepresso.sns.vo.Post">-->
<mapper namespace="com.codepresso.sns.mapper.PostMapper">

<!--POST 작성-->
<!--ID 확인-->

    <select id="checkMemberExists" resultType="INT">
        SELECT EXISTS(SELECT 1 FROM user WHERE userId = #{userId})
    </select>

    <insert id="savePost" parameterType="com.codepresso.sns.vo.Post" useGeneratedKeys="true" keyProperty="postId">
        INSERT INTO post(userId, content, likeCount, commentCount, createdAt, updatedAt)
        VALUES (#{newPost.userId}, #{newPost.content}, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
    </insert>

    <update id="newUserPost">
        UPDATE user
        SET postCount = postCount + 1
        WHERE userId = (#{userId});
    </update>

    <select id = "findOne" resultType="com.codepresso.sns.vo.Post">
        SELECT * FROM post WHERE postId = #{id}
    </select>

    <!--전체 포스트 확인-->
    <select id = "findAll" resultType="com.codepresso.sns.vo.Post">
        SELECT *
        FROM post
        ORDER BY createdAt DESC;
    </select>

    <select id = "findAllSorted" resultType="com.codepresso.sns.vo.Post">
        SELECT *
        FROM post
        ORDER BY likeCount DESC;
    </select>

    <!--페이지네이션-->
    <select id="findByPage" resultType="com.codepresso.sns.vo.Post">
        SELECT *
        FROM post
        ORDER BY createdAt DESC
        LIMIT 3 OFFSET #{offset};
    </select>

    <select id="countPost" resultType="int">
        SELECT COUNT(*) FROM post
    </select>

<!--유저의 작성 게시글 반환-->
    <select id="findByUserId" resultType="com.codepresso.sns.vo.Post">
        SELECT *
        FROM post
        WHERE userId = #{userId}
        ORDER BY createdAt DESC;
    </select>

<!--게시글 수정-->
    <update id="update">
        UPDATE post
        SET content =#{post.content}, updatedAt=CURRENT_TIMESTAMP
        WHERE postId=#{post.postId};
    </update>

    <delete id="delete">
        DELETE FROM post
        WHERE postId=#{post.postId} AND userId=#{post.userId};
    </delete>

<!--    //////////////////////////////////// 여기부터 댓글 관련/////////////////////////////////////-->
    <select id="findOneExists" resultType="INT">
        SELECT EXISTS(SELECT 1 FROM post WHERE postId = #{id})
    </select>

    <insert id="savePostComment" parameterType="com.codepresso.sns.vo.PostComment" useGeneratedKeys="true" keyProperty="commentId">
        INSERT INTO comment(postId, userId, comment, createdAt, updatedAt)
        VALUES (#{newPostComment.postId}, #{newPostComment.userId}, #{newPostComment.comment}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

    </insert>

    <select id = "findOneComment" resultType="com.codepresso.sns.vo.PostComment">
        SELECT * FROM comment WHERE commentId = #{id}
    </select>

    <select id="findCommentByPostId" resultType="com.codepresso.sns.vo.PostComment">
        SELECT *
        FROM comment
        WHERE postid = #{postId}
        ORDER BY createdAt DESC;
    </select>

    <select id="findCommentByCommentId" resultType="com.codepresso.sns.vo.PostComment">
        SELECT *
        FROM comment
        WHERE commentId = #{commentId};
    </select>

    <insert id="likePost">
        INSERT INTO postLike(userId, postId, createdAt)
        VALUES(#{userId}, #{postId}, CURRENT_TIMESTAMP);

        UPDATE post
        SET likeCount = likeCount + 1
        WHERE postId = #{postId};
    </insert>

    <delete id="unlikePost">
        UPDATE post
        SET likeCount = CASE
                            WHEN EXISTS (SELECT 1 FROM postlike WHERE userid = #{userId} AND postId = #{postId})
                                THEN likeCount - 1
                            ELSE likeCount
            END
        WHERE postId = #{postId};

        DELETE FROM postlike
        WHERE (userid, postId) = (#{userId}, #{postId})
          AND EXISTS (SELECT 1 FROM postlike WHERE userid = #{userId} AND postId = #{postId});

    </delete>

    <select id="existsLike" resultType="int">
        SELECT COUNT(*) FROM postlike WHERE userid = #{userId} AND postId = #{postId}
    </select>


</mapper>

